AWSTemplateFormatVersion: 2010-09-09
Description: |
  The Phonebook Application aims to create a phonebook application in Python and deployed as a web application with Flask on AWS Application Load Balancer with Auto Scaling Group of Elastic Compute Cloud (EC2) Instances and Relational Database Service (RDS) using AWS Cloudformation Service.

Parameters:
  myVPC:
    Description: Select your VPC
    Type: AWS::EC2::VPC::Id
  mySubnets:
    Description: Select at least 2 subnets
    Type: List<AWS::EC2::Subnet::Id>  
  myKP:
    Description: Select your Key
    Type: AWS::EC2::KeyPair::KeyName
  myIT:
    Description: Select instance type
    Type: String
    Default: t2.micro 
    AllowedValues: 
     - t2.micro
     - t3.micro
     - t2.nano
     - t3.nano    
      
Mappings:
  RegionImageMap: 
    us-east-1: 
      AMI: "ami-033b95fb8079dc481"
    
  
Resources:

  PhonebookEC2SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP for Flask Web Server and SSH port to secure reach to my EC2" 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecGroup.GroupId       
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref myVPC 

  ALBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP for Flask Web Server and SSH port to secure reach to my EC2" 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref myVPC 
  
  RDSSecGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        - EC2SecurityGroupId: !GetAtt PhonebookEC2SecGroup.GroupId
             
      EC2VpcId: !Ref myVPC
      GroupDescription: DBSecurityGroup # Required

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: "/"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: "HTTP"
      ProtocolVersion: "HTTP1"
      UnhealthyThresholdCount: 2
      VpcId: !Ref myVPC                

  myLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
         - RegionImageMap
         - !Ref AWS::Region
         - AMI
        InstanceType: !Ref myIT
        KeyName: !Ref myKP
        SecurityGroupIds:
          - !GetAtt PhonebookEC2SecGroup.GroupId
        UserData: !Base64 |
          #!/bin/bash
          yum update -y 
          yum install python3 -y
          pip3 install flask
          pip3 install flask-mysql
          pip3 install flask-sqlalchemy
          pip3 install flask-SQLAlchemy
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip  
          sudo ./aws/install
          aws configure
          
          
          us-east-1
          yaml
          RDS=`aws rds --region us-east-1 describe-db-instances --query "DBInstances[*].Endpoint.Address"`
          cd /home/ec2-user
          sudo chmod 777 dbserver.endpoint
          sudo echo $RDS > dbserver.endpoint
          FOLDER="https://raw.githubusercontent.com/Fatalrhym/my-projects/main/aws/Project-004-Phonebook-Application/"
          wget "${FOLDER}"/phonebook-app.py 
          mkdir templates && cd templates
          wget "${FOLDER}"/templates/add-update.html
          wget "${FOLDER}"/templates/delete.html
          wget "${FOLDER}"/templates/index.html
          cd ..
          python3 phonebook-app.py   

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: "ipv4"
      Scheme: "internet-facing"
      SecurityGroups: 
        - !GetAtt ALBSecGroup.GroupId
      Subnets: !Ref mySubnets
      Type: application

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ALB 
      Port: 80
      Protocol: HTTP

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref myLT
        Version: 1
      MaxSize: "3" 
      MinSize: "1" 
      TargetGroupARNs: 
        - !Ref TargetGroup 

  RDS:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "20"
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 7
      DBInstanceClass: "db.t2.micro" # Required
      DBName: "clarusway_phonebook"
      DBSecurityGroups: 
        - !Ref RDSSecGroup  
      DeleteAutomatedBackups: false
      DeletionProtection: true
      EnableIAMDatabaseAuthentication: true
      Engine: "MySQL"
      EngineVersion: "8.0.28"
      MasterUserPassword: "Please_Enter_Your_DB_Password"
      MasterUsername: "admin"
      MaxAllocatedStorage: 20
      MultiAZ: false
      Port: 3306
      PubliclyAccessible: true
      SourceRegion: "us-east-1"
      StorageEncrypted: false
      StorageType: "ssd"
      UseDefaultProcessorFeatures: false
      VPCSecurityGroups: 
        - !Ref myVPC  

Outputs:
  WebsiteURL:
    Value: !Sub
      - http://${PublicAddress}
      - PublicAddress: !GetAtt ALB.DNSName
    Description: Phonebook Application URL



